1. What are classes in java?
    - first package needs to be created and then create a class inside it;
    - syntax to create a class first it should have a access modifier EX: public
    - class keyword and then class name
    - class name should follow CamelCase naming convention [ standard ]

2. How many main can there be in a class?
    - only one main method

3. What is a main method?
    - public static void main(String [] args){}

4. What are identifiers in java?
    - variables, class, methods.

5. System.out.print() vs System.out.println()
    - System.out.print() on the same line
    - System.out.println() prints out the output in the console on a new line

6. Reserved keywords in java?
    - the words that have meaning there are around 53 of them
    EX: public, class, boolean and some more words.

**Length of a comment on a single line in an IDE

7. What are data types and how many types there are?
    -2 types: Primitive and Non-primitive
        - Primitive [simple, basic]: byte, int, long, double, float, boolean, short, char.
            - Primitive data types are pre defined [means these already have been defined by Java]
            - they start with lower case letter
            - size is fixed
        - Non-primitive: Objects, String, System etc.

8. Long data type?
    -EX: long numberOfViews = 1_000_000_000L;

9. What is a variable in Java?
    - box to store an information or piece of data
    - to declare a variable we first need to provide a data type for it and then provide a name for it and end it with semi colon;
    - [data type] [name of variable] = [value] [;] -> syntax on initialization of a variable;

10. Is it possible to declare and initialize multiple variables inline?
    - int a, b, c = 2; -> this is valid 3 are declared and only 1 is initialized [c=2];

11. What is main method? And it's syntax?
    - public static void main(String[] args){}
    - we declare and initialize local variables
    - main() it's the entry point
    - gateway to our program or application to start executing
12. {} -> curly braces;
    [] -> brackets or square brackets;
    () -> parentheses;
    ; -> semi colon;
    : -> colon;
    , -> comma;
    . -> dot;
    / -> slash or forward slash;
    | -> pipe;
    \ -> back slash;
    '' -> single quote;
    "" -> double quotes;
    * -> asterisk;
    & -> ampersand;
    ^ -> caret;
    # -> pound;
    @ -> at the rate;

13. char variable1 = 'a', variable2;
    variable2 = "Hello"; // compile error because variable2 is char type but I am trying to assign String to it

14. primitive data types?
    - 8 of them: byte, short, int, float, long, char, boolean, double;
    - they have predefined data types and size;
    - they do not have any methods;
    - starts with lower case;

15. What is type casting?
    - It is converting one data type to another;
    - Implicit and Explicit
        - Implicit [automatically] -> it happens automatically when we convert from smaller to larger data type;
        - Explicit [manually] -> when we convert from larger to smaller data type, because we might loose some value in our data
        EX: Explicit type casting - from double to int
        double d1 = 12.34;
        int i = d1 -> incompatible types compile error and in order to fix this we need to manually type cast it
        as follows int i = (int) d1; Now variable i has the value of 12;

16. Which of the below will compile?
    - int x = 1.0; // Not compile
    - short y = 1223445; // Not compile because short can only store up tp 32,767
    - long l1 = 12L; // Compile as long as the value has the postfix of 'l' or 'L'
    - int i = 999F; // Not compile because 'f' is only added to float data type as a postfix

17. short sh1 = 12;
    short sh2 = 10;
    short shSum = sh1 + sh2; // Not compile because Java will convert both of the operands to an int data
    // type only then it will complete the math operation
    // so the solution would be either to change the data type of shSum to int or
    // explicitly type cast the like such [short shSum = (short) sh1 + sh2];

18. int x = 3;

    int y = ++x * 5 / x-- + --x; // highest precedence is auto increment/decrement
    ++x -> pre increment - increments or increases the value of the variable by 1 in the same statement
    --x -> pre decrement - decrements or decreases the value of the variable by 1 in the same statement
    x++ -> post increment - increases the value of that variable by 1 on the next statement
    x-- -> post decrement - decrements or decreases the value of the variable by 1 on the next statement

    1. 4 * 5 / x-- + --x;
    2. 4 * 5 / 4 + --x;
    3. 4 * 5 / 4 + 2;
    4. 20 / 4 + 2;
    5. 5 + 2;
    6. y = 7.

19. How do I insert a text in double quotes within my String variable?
    EX: String s = "I \"love\" coding." -> Escape sequences help us insert special characters within our text
    Expected output: I "love" coding.

20. How to insert a new line within a text?
    String s = "I \nlove \njava" -> used to insert a new line within a text

21. What is explicit/implicit type casting?
    Explicit type casting is converting a data type to another such as from larger to smaller data type;

    EX: double num1 = 12.34;
        int num2 = (int) num1; since double is larger data type than int we have to explicitly type cast it because
        are using some data.
    Implicit -> conversion of type from smaller to larger, it doesn't require any explicit casting;

22. What are logical operators used for?
    && and ||
    && -> evaluates to true if both sides are true;
    || -> evaluates to true if only one side is true;

    EX: int x = 2;
        int y = 3;

        boolean bool = ++x == y && y++ >= x; //true because the value of x is 3 and y is also 3 until the next statement;

23. Ternary operators gets the name from having 3 operands:
    EX: exp1 ? exp2 : exp3
        Boolean bool = 2 > 1 ? true : false;

        x++ -> unary [single] operand;
        int x = 1; int y = 2; x = x + y; -> binary;
        x > y -> binary;

======================================================================================================================

24. How can I swap the values of these 2 variables?

    int x = 100;
    int y = 10;

    Expected output: x = 10 and y = 100;

25. Will there be any compiler error for the initialization of the below variables?

    int i = 65.0; // double can't be in int
    float f = 23.76; // post fix 'F' or 'f'
    long l = 1234567; // post fix of 'L' or 'l'
    char c = "a"; // single quote should be used

26. Depending on the test score result I want to print out if student has passed the the exam or not.

    if the score is less than or equal to 50 I want to print out "FAIL"
    and if greater than or equal to 50 then "PASS";
    String pass = "PASS";
    String fail = "FAIL";
    int testResult = 73;

27. Will this compile?

    short s1 = 123;
    short s2 = 456;

    short sum = s1 + s2; // No, it won't compile because the arithmetic operations
    // carry out in int data type. So the fix is [short sum = (short) s1 + s2]

28. Are these 2 equal?

    int i = 50;
    double num = 50.00;

    String result = i == num ? "Equal" : "Not equal"; // ternary operator
    // equal because int and double are being compared so java will convert
    // the smaller type to larger data type to perform this comparison operation

29. What is a variable in java?

    - variable is a storage that stores a data;
    - a number, a character, boolean, class variables [objects] etc.
    - to identify certain data from our application, it's variable name that determines which variable;
    - it's convenient to store data
    - it's reduces repetition, and redundancy
    - easy to maintain or update;
    - being able to control from one place vs many areas;

30. Can operator be stored in a variable?

    EX: String equalToSymbol = "=";
    char equalToChar = '=';

31. How do we compare 2 string variables?

    EX: String a = "Devx";
        String b = "devx";

        boolean bool = a == b; // returns false because == operator is case sensitive;

32. What is the purpose on using if statements?
    - if statement is control flow
    - to put a condition
    - conditional statement
    - it works with boolean expression or the expression should have boolean outcome
    - if statements can be implemented/used without else statement

    we also have else statements:
    - which gets executed when if statements is false
    - else statement cannot be without if

33. Write a logic/code for thermostat?

   // it's set on automatic which turns on the heater or AC
   // depending on the current temp in your house
   // if it's above desired temp then turnOnAC()
   // else turnOnHeat() [if it's colder than desired temp]

    Ex: int currentTemp = 60;
        int desiredTemp = 72;

        if(currentTemp <= desiredTemp){
            System.out.println("Turn on the heater!");
        } else {
            System.out.println("Turn on the AC!");
        }
 ======================== ============ ============ ============
    Convert the above if else to ternary operator:

    Ex: int currentTemp = 60;
        int desiredTemp = 72;

     String heaterOrAc = currentTemp <= desiredTemp ? "Turn on the heater!" : "Turn on the AC!";
     System.out.print(heaterOrAc);

34. Given an int variable. Print out if it's even or odd using ternary operator?

    EX: int num = 7;

    // to find out if the number is even or odd, we use modulo [%] 2 and if the remainder is 0 then
    // it is even and if it's not then it's odd.

    String evenOrOdd = num % 2 == 0 ? "Even" : "Odd";
    // we have a new variable string called evenOrOdd and we are seeing if num int variable is even or odd
    // and for that we use modulo 2 to see if it's even or odd
    // if it's equal to 0 then we will assign "Even" and if not then "Odd" will be assigned to evenOrOdd variable

    // let's convert this to if/else
    EX: int num = 7;

    String evenOrOdd = "";

    if (num % 2 == 1) {
       evenOrOdd = "Odd";
    } else {
        evenOrOdd = "Even";
    }

    System.out.println(evenOrOdd);

35. int x = 0;
        x++; // 0
        --x; // 0
        x += 2; //
        int y; // declaring
        x +=y; // compile time error because 'y' has not been initialized yet
        System.out.print(x);

36. Constant variables in java? What are they?

    - final keyword is used when initializing it;
    - naming is all caps; [EX: final String DOB]
    - their values cannot be changed or reassigned;

37. Different types of type casting?
    - 2 types: implicit and explicit
        - Implicit [automatic] -> data type conversion happens automatically [EX: smaller data type to larger data type]
        - Explicit [manually] -> has to be manually type casted from larger to smaller [EX: from double to int]
            - why should it be explicit: it's java's way of warning us and agreeing to loosing some data.

38. Help me create a class called "MyClass" and it's not in the default package
    so the package name is "my_package";

    package my_package;

    public class MyClass {

        public static void main(String [] args) {

            System.out.print("Devxschool");
        }
    }

39. Tech stack:
    - the different software technology tools and software applications

40. Get an input form the user about their age, Name, last name, favorite quote?

    EX: Scanner scan = new Scanner(System.in); // created an object of Scanner class
    // that way we can have access to the methods by typing the objects name and import the methods
    // the methods such as: nextInt(), nextBoolean(), nextLine() etc.

    int age = 32;
    String name = "Baha";

41. / -> slash
    " -> double quotes
    {} -> curly braces
    () -> parenthesis
    [] -> square brackets
    ; -> semi colon
    - -> hyphen or dash
    = -> equal for assignment
    ? -> question mark
    : -> colon
    | -> pipe

42. Take an input from user for int, double, char, String?

    Scanner scan = new Scanner(System.in);
    int i = scan.nextInt();
    double num = scan.nextDouble();
    char a = scan.next().charAt(0);
    String s = scan.nextLine() or next(); -> next() - doesn't read white space.
    [EX: white shark -> it can be read by nextLine() as one string variable]

    - What are variables?
    Variable is a storage that stores some data.

    - declaration vs initialization of variables?
    to declare a variable we need to give it a data type and a name. [EX: int a;]

    a = 35; -> initialized the variable a with a value of 35;

    - convert the above int variable to a double:
    double num = a; -> this is called implicit type casting which happens automatically

    - convert num to byte data type?
    byte b = (byte) num; -> explicit data type casting which is manual;

43.  What is a method?
    - method is a function, to combine some actions to use later for more reusability;
    - method is a block of code which performs some tasks;

44. Syntax of method definition?

    - method is a block of code that performs defined action

    public static int getNumber (int num1, int num2) {

    }

45. Difference between static and non static methods?

    - static:
        - they belong to the class;
        - they can be called from both static and non static methods within the same class without
        creating an object of that class;

    - non static:
        - they belong to the object;
        - they can be called from other non static methods directly without creating an object;
        - in order to call non static method from a static method, object needs to be created;

46. How do I create a non static method that returns a boolean and takes double as a parameter?

    public boolean isAbove (double temp) {
        return false;
    }

    create a method that takes int as param, and returns String and it is static?

    public static String printAge (int age) {
        String personAge = "" + age;
        return personAge;
    }

    create a method that doesn't return any value but prints out "Welcome!", non static;
    public void printWelcome () {
         System.out.println("Welcome!");
    }

    * abbreviation is shortened form of a word.
        EX: IL, MI, ME -> state name abbreviations;

47. Tell me about Strings in Java?
    - String is a class that has built in set of methods;
    - Strings are immutable, meaning that once the object is assigned to a reference variable it cannot be changed;
    - Some methods are: substring() which derives the part of string;
    - String.charAt() - helps us find the character at specified index;
    - String.concat() - combines 2 strings at the edn of another;
    - String.equals() - which compares the references;
    - toUpperCase(), toLowerCase();
    - indexOf() - returns an int, which defines the index of a particular char or a String;
    - trim() - gets rid of spaces from both sides of the string, front and end;
    - lastIndexOf() - returns int which is the index of specified regex;
    - equalsIgnoreCase() - returns boolean [true/false] by comparing two references by ignoring case;
    - contains() - returns boolean, method checks whether a string contains a sequence of characters.
    - replace() - takes 2 params, returns string by replacing first occurrence of the first param with the second one;
    - replaceAll() - takes 2 params, returns a string by replacing all occurrences of the first param with second param;
    EX:
    String s1 = "Devx Devx";
    s1 = s1.replace("vx", "vv"); // Devv Devx
    s1 = s1.replaceAll("e", "u"); // Duvv Duvv

    - startsWith() - returns boolean, method checks whether a string starts with the specified character(s).
    EX: String str = "Devx School is a start point for IT industry";
    if (str.startsWith("D"));

    - endsWith() - returns boolean, method checks whether a string ends with the specified character(s).
    - length() - returns int which is the number of characters [elements] in the string;
    - isEmpty() - returns boolean, by checking if the given String contains any char of not;

48. Tell me about arrays in java?
    - Array is a fixed size collection of elements of the same data type;
    - Once the size has been given can't be changed
    - supports primitive and non primitive;
    - arrays are used for manipulating over collection of data;
    - we access the elements of an array by index, always starts with index 0 for the first element;
    - fast access to elements, the elements in the beginning or middle or last indexes will take the same time;
    - immutable because the size is provided while creating an array and it is fixed, if elements
    need to be added into an existing array then we need to create copy of it and only then provide a
    bigger size to add more elements;

49. Methods in Arrays class?
    - length -> length is a final variable applicable for arrays.
    With the help of the length variable, we can obtain the size of the array.
    - toString() -> static method that converts the elements of an array to String; EX: int[] nums -> sout(Arrays.toString(nums));
    - sort() -> static method that returns an array by sorting it's elements in an ascending order;
    - copyOf() -> creates a copy of an existing array, it is safe way to copy an array;
    - binarySearch() -> returns int index of an element in the array, but only guarantees return the index correctly
    if the array is sorted already;
    EX: String[] cars = {"Lexus", "BMW", "Ford", "Chevy"};
        Arrays.sort(cars); // {"BMW", "Chevy", "Ford", "Lexus"}
        Arrays.binarySearch(cars, "Ford") -> returns 2 which is the index of "Ford";

50. String[] cities = {"Los Angeles", "San Francisco", "Chicago", "New York", "Boston"};

    - write a method that returns an int array which has the same length as the cities array
    and at each index it should have the number of times letter 'l' or 'L' appears?

    public static int[] countNumberOfCharL (String[] arr){}

    Expected output: [2, 0, 0, 0, 0]


